//------------------------------------------------------------------------------
// <auto-generated>
//     這個程式碼是由範本產生。
//
//     對這個檔案進行手動變更可能導致您的應用程式產生未預期的行為。
//     如果重新產生程式碼，將會覆寫對這個檔案的手動變更。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Minishop_ver_0._0._0.Areas.SK_AREA.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FancyStoreEntities : DbContext
    {
        public FancyStoreEntities()
            : base("name=FancyStoreEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Activity> Activities { get; set; }
        public virtual DbSet<ActivityProduct> ActivityProducts { get; set; }
        public virtual DbSet<BrowseHistory> BrowseHistories { get; set; }
        public virtual DbSet<CategoryMiddle> CategoryMiddles { get; set; }
        public virtual DbSet<CategorySmall> CategorySmalls { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<Color> Colors { get; set; }
        public virtual DbSet<DiscountMethod> DiscountMethods { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<EvaluationSample> EvaluationSamples { get; set; }
        public virtual DbSet<KeyWord> KeyWords { get; set; }
        public virtual DbSet<MyFavorite> MyFavorites { get; set; }
        public virtual DbSet<NewsList> NewsLists { get; set; }
        public virtual DbSet<OrderDetail> OrderDetails { get; set; }
        public virtual DbSet<OrderStatusList> OrderStatusLists { get; set; }
        public virtual DbSet<PayMethod> PayMethods { get; set; }
        public virtual DbSet<Photo> Photos { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ProductColor> ProductColors { get; set; }
        public virtual DbSet<ProductEvaluation> ProductEvaluations { get; set; }
        public virtual DbSet<ProductPhoto> ProductPhotoes { get; set; }
        public virtual DbSet<ProductSize> ProductSizes { get; set; }
        public virtual DbSet<ProductStock> ProductStocks { get; set; }
        public virtual DbSet<ProductWashing> ProductWashings { get; set; }
        public virtual DbSet<Question> Questions { get; set; }
        public virtual DbSet<Region> Regions { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<Shipping> Shippings { get; set; }
        public virtual DbSet<Size> Sizes { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Washing> Washings { get; set; }
        public virtual DbSet<Cart> Carts { get; set; }
        public virtual DbSet<VW_EW_CategorySM> VW_EW_CategorySM { get; set; }
        public virtual DbSet<VW_EW_OrderDetail> VW_EW_OrderDetail { get; set; }
        public virtual DbSet<VW_EW_ProductColor> VW_EW_ProductColor { get; set; }
        public virtual DbSet<VW_EW_ProductSize> VW_EW_ProductSize { get; set; }
        public virtual DbSet<VW_EW_Supplier> VW_EW_Supplier { get; set; }
        public virtual DbSet<OrderHeader> OrderHeaders { get; set; }
        public virtual DbSet<SK_CategorySMName> SK_CategorySMName { get; set; }
    
        [DbFunction("FancyStoreEntities", "sk_fn_reTable_P")]
        public virtual IQueryable<sk_fn_reTable_P_Result> sk_fn_reTable_P(Nullable<int> temp)
        {
            var tempParameter = temp.HasValue ?
                new ObjectParameter("temp", temp) :
                new ObjectParameter("temp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<sk_fn_reTable_P_Result>("[FancyStoreEntities].[sk_fn_reTable_P](@temp)", tempParameter);
        }
    
        public virtual int sk_sp_reProd_Name(Nullable<int> pid, ObjectParameter pName)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sk_sp_reProd_Name", pidParameter, pName);
        }
    
        public virtual int sk_sp_reTable_Prod(Nullable<int> temp)
        {
            var tempParameter = temp.HasValue ?
                new ObjectParameter("temp", temp) :
                new ObjectParameter("temp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sk_sp_reTable_Prod", tempParameter);
        }
    
        [DbFunction("FancyStoreEntities", "sk_sp_innerjoinTable")]
        public virtual IQueryable<sk_sp_innerjoinTable_Result> sk_sp_innerjoinTable(Nullable<int> temp)
        {
            var tempParameter = temp.HasValue ?
                new ObjectParameter("temp", temp) :
                new ObjectParameter("temp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<sk_sp_innerjoinTable_Result>("[FancyStoreEntities].[sk_sp_innerjoinTable](@temp)", tempParameter);
        }
    }
}
